#
# Configuration file for backup and restore of GPT based Linux systems.
#
# Copyright (C) 2020 Thomas Mueller <developer@mueller-dresden.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# current time, will be used for new backup directorys
BACKUPTIME=`/bin/date +%Y-%m-%d_%Hh%Mm%Ss`

# directory path for new backups
BACKUPMAINDIR='/system_backups/system'
BACKUPDIR=${BACKUPMAINDIR}'/BACKUP_'${HOSTNAME}'_'${BACKUPTIME}

# device to backup, later (only one is possible)
BACKUPDISC="/dev/sda"

# partition with the physical volume of the LVM
PVDEVS="/dev/sda3"

# partition name, mountpoints and filesytem of all partitions, who should backup with tar (example of two partitions "/dev/sda1:/mount1:vfat /dev/sda5:/mount2:ext4")
TARSOURCES="/dev/sda1:/boot/efi:vfat"

# names of LVM partions (example of two partitions "/dev/mapper/internal-system /dev/mapper/internal-varlog") (only ext4, ext3, ext2 are allowed)
LVMSOURCES="/dev/mapper/internal-system"

# name of the restore script
RESTOREFILE=$BACKUPDIR"/restore_backup.sh"

# file system of LVM volumes type after restoring (only ext4, ext3, ext2 are allowed)
DEFAULT_FILESYSTEM_TYPE="ext4"

# temporary mount point for the restore process
RESTOREMNT="/tmp/temp_mount_restore"

# mail address for notifications
mailNotificationAddress="example@mail.org mail@example.org"

# optional, set random time to wait (usefull for cron jobs) - it waits $RANDOM/$randomTimeDiffer seconds ($RANDOM is a number between 0 and 32767)
# randomTimeDiffer=300

# optinal, run this (mount) script before create the backup
# startMountScript='/system_backups/mount_backup_sshfs.sh'

# optional, delete all backups older then (15) days
# deleteBackupOlderThanDays=15

# optional, delete all backups, but not the last KeepOnlyNumberOfBackups ones (please note: the BSD head command do not know negative values)
# keepOnlyNumberOfBackups=5
